@import "../config/config";

@import "_flexbox";
@import "_grid";

.border-radius (@radius: 5px) {
  -webkit-border-radius: @radius;
  -moz-border-radius:    @radius;
  border-radius:         @radius;

  -moz-background-clip:    padding;
  -webkit-background-clip: padding-box;
  background-clip:         padding-box;
}

.border-top-radius(@radius) {
  border-top-right-radius: @radius;
  border-top-left-radius: @radius;
}
.border-right-radius(@radius) {
  border-bottom-right-radius: @radius;
  border-top-right-radius: @radius;
}
.border-bottom-radius(@radius) {
  border-bottom-right-radius: @radius;
  border-bottom-left-radius: @radius;
}
.border-left-radius(@radius) {
  border-bottom-left-radius: @radius;
  border-top-left-radius: @radius;
}

.background-cover(@url, @position) {
  background-image: url(@url);
  background-position: center @position;
  -moz-background-size: cover;
  background-size: cover;
  background-repeat: no-repeat;
}

.background-contain(@url, @position) {
  background-image: url(@url);
  background-position: center @position;
  -moz-background-size: contain;
  background-size: contain;
  background-repeat: no-repeat;
}

.box-shadow (@string) {
  -webkit-box-shadow: @string;
  -moz-box-shadow:    @string;
  box-shadow:         @string;
}
.drop-shadow (@x: 0, @y: 1px, @blur: 2px, @spread: 0, @alpha: 0.25) {
  -webkit-box-shadow:	@x @y @blur @spread rgba(0, 0, 0, @alpha);
  -moz-box-shadow:	@x @y @blur @spread rgba(0, 0, 0, @alpha);
  box-shadow:		@x @y @blur @spread rgba(0, 0, 0, @alpha);
}
.inner-shadow (@x: 0, @y: 1px, @blur: 2px, @spread: 0, @alpha: 0.25) {
  -webkit-box-shadow: inset @x @y @blur @spread rgba(0, 0, 0, @alpha);
  -moz-box-shadow:    inset @x @y @blur @spread rgba(0, 0, 0, @alpha);
  box-shadow:         inset @x @y @blur @spread rgba(0, 0, 0, @alpha);
}

.textCut(@col) {
  display: -webkit-box;
  -webkit-line-clamp: @col;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.user-text-selection(@select: auto) {
  -webkit-touch-callout: @select; /* iOS Safari */
  -webkit-user-select: @select; /* Safari */
  -khtml-user-select: @select; /* Konqueror HTML */
  -moz-user-select: @select; /* Firefox */
  -ms-user-select: @select; /* Internet Explorer/Edge */
  user-select: @select; /* N */
}

/*

//----------------------------------------------------//
// Mixins & Includes                                  //
//----------------------------------------------------//
@mixin notext {
	overflow: hidden;
	text-indent: -9999px;
}

.clearfix:after {
	content: "";
	display: table;
	clear: both;
}

.centered	{
	display: table;
	width: 100%;
	height: 100%;
	> * {
		display: table-cell;
		text-align: center;
		vertical-align: middle;
	}
}

// PLACEHOLDER MIXIN
@mixin placeholderColor($input-text-color) {
	&::-webkit-input-placeholder {color: $input-text-color;}
	&:-moz-placeholder {color: $input-text-color; opacity: 1;}
	&::-moz-placeholder {color: $input-text-color; opacity: 1;}
	&:-ms-input-placeholder {color: $input-text-color;}
	&:focus:-moz-placeholder {color:transparent; opacity: 1;}
	&:focus::-moz-placeholder {color:transparent; opacity: 1;}
	&:focus::-webkit-input-placeholder {color:transparent;}
	&:focus:-ms-input-placeholder {color:transparent;}
	&:focus::placeholder {color:transparent;}
}

@mixin clearfix {
	&:after {
		content: " ";
		display: block;
		clear: both;
	}
}

// Clear select without default button
@mixin clearSelect {
	-webkit-appearance: none;
	-moz-appearance:    none;
	appearance:         none;
	-webkit-border-radius: 0;
	-moz-border-radius: 0;
	border-radius: 0;
}

//elements get appended with "__" and the $name
@mixin e($name) {
	@at-root   #{&}__#{$name} {
		@content;
	}
}

//modifiers get appended with "--" and the $name
@mixin m($name) {
	@at-root   #{&}--#{$name} {
		@content;
	}
}

 @mixin b($point) {
	@if $point == desktop {
		@media (max-width: 1366px) and (min-width:1024px) { @content ; }
	}
	@else if $point == tablet {
		@media (max-width: 1000px) { @content ; }
	}
	@else if $point == phablet {
		@media (min-width: 37.5em)  { @content ; }
	}
	@else if $point == mobile {
		@media (max-width: 767px)  { @content ; }
	}
	@else if $point == mobile3x {
		@media only screen and (-webkit-min-device-pixel-ratio: 3), only screen and (min-resolution: 3dppx), only screen and (min-resolution: 350dpi) {
			@content ;
		}
	}
	@else {
		@media (max-width: $point + 'px')  { @content ; }
	}
}

@mixin ie() {
	@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  	@content ;
	}
}

@mixin before-img($width, $height) {
	content: '';
	display: block;
	position: absolute;
	width: $width;
	height: $height;
}

//----------------------------------------------------//
// REM FONT_SIZE WITH FALLBACK 												//
//----------------------------------------------------//
// USAGE:
// p {
//   @include font-size(14px)
// }

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}


@mixin gradient($top, $bottom) {
   background: $top;
   background: -moz-linear-gradient(top,  $top 0%, $bottom 100%);
   background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom));
   background: -webkit-linear-gradient(top,  $top 0%,$bottom 100%);
   background: -o-linear-gradient(top,  $top 0%,$bottom 100%);
   background: -ms-linear-gradient(top,  $top 0%,$bottom 100%);
   background: linear-gradient(to bottom,  $top 0%,$bottom 100%);
   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$top}', endColorstr='#{$bottom} ',GradientType=0 );
}


@mixin textCut($col) {
  display: -webkit-box;
  -webkit-line-clamp: $col;
  -webkit-box-orient: vertical;
  overflow: hidden;
}



.transition {
	transition: all .2s ease-in-out;
	&:hover {
		transition: all .2s ease-in-out;
	}
}

.rlist {
	font-size: 0;
	line-height: 0;
}
.ulist {
	font-size: $mainFontSize;
	line-height: $mainFontHeight;
}

 */

.transition {
  transition: all .2s ease-in-out;
  &:hover {
    transition: all .2s ease-in-out;
  }
}

.clearfix:after {
  content: "";
  display: table;
  clear: both;
}

.clearfix {
  &:after {
    content: " ";
    display: block;
    clear: both;
  }
}

.ulist {
  font-size: @mainFontSize;
  line-height: @mainFontHeight;
}

.rlist {
  font-size: 0;
  line-height: 0;
}

.textCut(@col) {
  display: -webkit-box;
  -webkit-line-clamp: @col;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.b(@point, @content) when (@point = desktop)  {
  @media (max-width: 1366px) and (min-width:1024px) { @content() ; }
}

.b(@point, @content) when (@point = tablet)  {
  @media (max-width: 1000px) { @content() ; }
}

.b(@point, @content) when (@point = phablet)  {
  @media (min-width: 37.5em)  { @content() ; }
}

.b(@point, @content) when (@point = mobile)  {
  @media (max-width: 767px)  { @content(); }
}

.b(@point, @content) when (@point = mobile3x)  {
  @media only screen and (-webkit-min-device-pixel-ratio: 3), only screen and (min-resolution: 3dppx), only screen and (min-resolution: 350dpi) {
  @content();
  }
}

.b(@point, @content)  {
  @media (max-width: @point + 'px')  { @content(); }
}

.rlist() {
  font-size: 0;
  line-height: 0;
}
.ulist() {
  font-size: @mainFontSize;
  line-height: @mainFontHeight;
}

.main-slick-arrows(@arrowsSideGap) {
  .slick-arrow {
    position: absolute;
    z-index: 4;
    top: calc((57px - 41px)/2);

    display: block !important;
    padding: 0;
    width: 41px;
    height:41px ;

    .border-radius(50%);
    border:1px solid #d5dfe4;

    font-size: 15px;
    line-height: 36px;
    text-align: center;

    fill:#d5dfe4;
    color:#d5dfe4;

    background: transparent;

    cursor: pointer;

    &:extend(.transition);

    &__icon {
      position: absolute;
      top: calc(20px - 7px);
      left: calc(20px - 6px);
    }
    &.slick-disabled {
      opacity: .5;
      &:hover {
        border-color:#d5dfe4;
        fill:#d5dfe4;
      }
    }


    &:hover {
      border-color:@indexColorGreen;
      fill:@indexColorGreen;
      color: @indexColorGreen;
    }
    &-prev {
      left: -@arrowsSideGap; //0; // left: -92px;
      .b(1386, { left: -50px;});
      .b(1280, { left: -10px;});

      .icon-chevron {
        transform:rotate(180deg);
      }
      .capitalist-icon-chevron {
        transform:rotate(180deg);
      }
    }
    &-next {
      // right: -92px;
      right: -@arrowsSideGap;
      .slick-arrow__icon {
        left: 16px;
      }
      .b(1386, { left: -50px;});
      .b(1280, { left: -10px;});
    }
  }

  .icon-chevron {
    width: 8px;
    height: 14px;
  }
}


/// https://gist.github.com/bfillmer/ece4e9dd7e942312847d

.coverer() {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.centerer() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.word-wrap() {
  word-break: break-word;
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto;
}

.ellipsis() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.black(@opacity) {
  @black: rgba(0, 0, 0, @opacity);
}

.white(@opacity) {
  @white: rgba(255, 255, 255, @opacity);
}